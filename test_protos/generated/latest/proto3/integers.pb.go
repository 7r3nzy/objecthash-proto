// Code generated by protoc-gen-go. DO NOT EDIT.
// source: integers.proto

package schema_proto3

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Fixed32Message struct {
	Value  uint32   `protobuf:"fixed32,1,opt,name=value" json:"value,omitempty"`
	Values []uint32 `protobuf:"fixed32,2,rep,packed,name=values" json:"values,omitempty"`
}

func (m *Fixed32Message) Reset()                    { *m = Fixed32Message{} }
func (m *Fixed32Message) String() string            { return proto.CompactTextString(m) }
func (*Fixed32Message) ProtoMessage()               {}
func (*Fixed32Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Fixed32Message) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Fixed32Message) GetValues() []uint32 {
	if m != nil {
		return m.Values
	}
	return nil
}

type Fixed64Message struct {
	Value  uint64   `protobuf:"fixed64,1,opt,name=value" json:"value,omitempty"`
	Values []uint64 `protobuf:"fixed64,2,rep,packed,name=values" json:"values,omitempty"`
}

func (m *Fixed64Message) Reset()                    { *m = Fixed64Message{} }
func (m *Fixed64Message) String() string            { return proto.CompactTextString(m) }
func (*Fixed64Message) ProtoMessage()               {}
func (*Fixed64Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Fixed64Message) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Fixed64Message) GetValues() []uint64 {
	if m != nil {
		return m.Values
	}
	return nil
}

type Int32Message struct {
	Value  int32   `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Values []int32 `protobuf:"varint,2,rep,packed,name=values" json:"values,omitempty"`
}

func (m *Int32Message) Reset()                    { *m = Int32Message{} }
func (m *Int32Message) String() string            { return proto.CompactTextString(m) }
func (*Int32Message) ProtoMessage()               {}
func (*Int32Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *Int32Message) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Int32Message) GetValues() []int32 {
	if m != nil {
		return m.Values
	}
	return nil
}

type Int64Message struct {
	Value  int64   `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Values []int64 `protobuf:"varint,2,rep,packed,name=values" json:"values,omitempty"`
}

func (m *Int64Message) Reset()                    { *m = Int64Message{} }
func (m *Int64Message) String() string            { return proto.CompactTextString(m) }
func (*Int64Message) ProtoMessage()               {}
func (*Int64Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *Int64Message) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Int64Message) GetValues() []int64 {
	if m != nil {
		return m.Values
	}
	return nil
}

type Sfixed32Message struct {
	Value  int32   `protobuf:"fixed32,1,opt,name=value" json:"value,omitempty"`
	Values []int32 `protobuf:"fixed32,2,rep,packed,name=values" json:"values,omitempty"`
}

func (m *Sfixed32Message) Reset()                    { *m = Sfixed32Message{} }
func (m *Sfixed32Message) String() string            { return proto.CompactTextString(m) }
func (*Sfixed32Message) ProtoMessage()               {}
func (*Sfixed32Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *Sfixed32Message) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Sfixed32Message) GetValues() []int32 {
	if m != nil {
		return m.Values
	}
	return nil
}

type Sfixed64Message struct {
	Value  int64   `protobuf:"fixed64,1,opt,name=value" json:"value,omitempty"`
	Values []int64 `protobuf:"fixed64,2,rep,packed,name=values" json:"values,omitempty"`
}

func (m *Sfixed64Message) Reset()                    { *m = Sfixed64Message{} }
func (m *Sfixed64Message) String() string            { return proto.CompactTextString(m) }
func (*Sfixed64Message) ProtoMessage()               {}
func (*Sfixed64Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *Sfixed64Message) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Sfixed64Message) GetValues() []int64 {
	if m != nil {
		return m.Values
	}
	return nil
}

type Sint32Message struct {
	Value  int32   `protobuf:"zigzag32,1,opt,name=value" json:"value,omitempty"`
	Values []int32 `protobuf:"zigzag32,2,rep,packed,name=values" json:"values,omitempty"`
}

func (m *Sint32Message) Reset()                    { *m = Sint32Message{} }
func (m *Sint32Message) String() string            { return proto.CompactTextString(m) }
func (*Sint32Message) ProtoMessage()               {}
func (*Sint32Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *Sint32Message) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Sint32Message) GetValues() []int32 {
	if m != nil {
		return m.Values
	}
	return nil
}

type Sint64Message struct {
	Value  int64   `protobuf:"zigzag64,1,opt,name=value" json:"value,omitempty"`
	Values []int64 `protobuf:"zigzag64,2,rep,packed,name=values" json:"values,omitempty"`
}

func (m *Sint64Message) Reset()                    { *m = Sint64Message{} }
func (m *Sint64Message) String() string            { return proto.CompactTextString(m) }
func (*Sint64Message) ProtoMessage()               {}
func (*Sint64Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *Sint64Message) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Sint64Message) GetValues() []int64 {
	if m != nil {
		return m.Values
	}
	return nil
}

type Uint32Message struct {
	Value  uint32   `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Values []uint32 `protobuf:"varint,2,rep,packed,name=values" json:"values,omitempty"`
}

func (m *Uint32Message) Reset()                    { *m = Uint32Message{} }
func (m *Uint32Message) String() string            { return proto.CompactTextString(m) }
func (*Uint32Message) ProtoMessage()               {}
func (*Uint32Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *Uint32Message) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Uint32Message) GetValues() []uint32 {
	if m != nil {
		return m.Values
	}
	return nil
}

type Uint64Message struct {
	Value  uint64   `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Values []uint64 `protobuf:"varint,2,rep,packed,name=values" json:"values,omitempty"`
}

func (m *Uint64Message) Reset()                    { *m = Uint64Message{} }
func (m *Uint64Message) String() string            { return proto.CompactTextString(m) }
func (*Uint64Message) ProtoMessage()               {}
func (*Uint64Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *Uint64Message) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Uint64Message) GetValues() []uint64 {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterType((*Fixed32Message)(nil), "schema.proto3.Fixed32Message")
	proto.RegisterType((*Fixed64Message)(nil), "schema.proto3.Fixed64Message")
	proto.RegisterType((*Int32Message)(nil), "schema.proto3.Int32Message")
	proto.RegisterType((*Int64Message)(nil), "schema.proto3.Int64Message")
	proto.RegisterType((*Sfixed32Message)(nil), "schema.proto3.Sfixed32Message")
	proto.RegisterType((*Sfixed64Message)(nil), "schema.proto3.Sfixed64Message")
	proto.RegisterType((*Sint32Message)(nil), "schema.proto3.Sint32Message")
	proto.RegisterType((*Sint64Message)(nil), "schema.proto3.Sint64Message")
	proto.RegisterType((*Uint32Message)(nil), "schema.proto3.Uint32Message")
	proto.RegisterType((*Uint64Message)(nil), "schema.proto3.Uint64Message")
}

func init() { proto.RegisterFile("integers.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0xcc, 0x2b, 0x49,
	0x4d, 0x4f, 0x2d, 0x2a, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2d, 0x4e, 0xce, 0x48,
	0xcd, 0x4d, 0x84, 0xf0, 0x8c, 0x95, 0xec, 0xb8, 0xf8, 0xdc, 0x32, 0x2b, 0x52, 0x53, 0x8c, 0x8d,
	0x7c, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x85, 0x44, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53,
	0x25, 0x18, 0x15, 0x18, 0x35, 0xd8, 0x83, 0x20, 0x1c, 0x21, 0x31, 0x2e, 0x36, 0x30, 0xa3, 0x58,
	0x82, 0x49, 0x81, 0x59, 0x83, 0x3d, 0x08, 0xca, 0x83, 0xeb, 0x37, 0x33, 0xc1, 0xaa, 0x9f, 0x0d,
	0xbb, 0x7e, 0x36, 0xb8, 0x7e, 0x1b, 0x2e, 0x1e, 0xcf, 0xbc, 0x12, 0x1c, 0xb6, 0xb3, 0x62, 0xd7,
	0xcd, 0x8a, 0xa6, 0x1b, 0x87, 0xdd, 0xcc, 0xd8, 0x75, 0x33, 0xc3, 0x75, 0xdb, 0x73, 0xf1, 0x07,
	0xa7, 0xe1, 0xf1, 0x3c, 0x3f, 0x76, 0x03, 0xf8, 0x31, 0x0d, 0xc0, 0xe1, 0x02, 0x01, 0xec, 0x06,
	0x08, 0xc0, 0x0d, 0xb0, 0xe5, 0xe2, 0x0d, 0xce, 0xc4, 0xe9, 0x7d, 0x41, 0xec, 0xda, 0x05, 0xd1,
	0xb5, 0xe3, 0xb0, 0x5d, 0x08, 0xbb, 0x76, 0x21, 0x64, 0xed, 0xa1, 0xb8, 0x6d, 0xe7, 0xc5, 0xae,
	0x9d, 0x17, 0x5d, 0x3b, 0x0e, 0xdb, 0x59, 0xb0, 0x6b, 0x67, 0x81, 0x69, 0x4f, 0x62, 0x83, 0xa4,
	0x40, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x50, 0x36, 0x03, 0x78, 0xa1, 0x02, 0x00, 0x00,
}
